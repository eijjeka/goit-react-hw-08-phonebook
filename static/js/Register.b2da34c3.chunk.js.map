{"version":3,"file":"static/js/Register.b2da34c3.chunk.js","mappings":"oTAEaA,EAAOC,EAAAA,GAAAA,KAAH,sFAMJC,EAAQD,EAAAA,GAAAA,MAAH,qEAKLE,EAAQF,EAAAA,GAAAA,MAAH,+jBAwBLG,EAASH,EAAAA,GAAAA,OAAH,+qBA2BNI,EAAeJ,EAAAA,GAAAA,IAAH,sG,UCzDZK,EAAW,WAAO,IAAD,MACtBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WALNC,EADF,EACEA,SADF,IAEEC,UAAaC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,QACrBC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAUF,OACE,SAACC,EAAA,MAAD,CACEC,QAAS,CAAEC,MAAO,EAAGC,QAAS,GAC9BC,QAAS,CAAEF,MAAO,EAAGC,QAAS,GAC9BE,WAAY,CAAEC,SAAU,IAH1B,UAKE,UAACvB,EAAD,CAAMwB,SAAUT,GAXH,SAACU,GAChBlB,EAASmB,EAAAA,EAAAA,SAAwBD,IACjCT,OASE,WACE,UAACd,EAAD,mBAEE,SAACC,GAAD,QACEwB,KAAK,QACDhB,EAAS,OAAQ,CACnBiB,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,oDAKjB,SAAC1B,EAAD,WACS,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQmB,QAAQ,SAAC3B,EAAD,iBAAeQ,QAAf,IAAeA,GAAf,UAAeA,EAAQmB,YAAvB,aAAe,EAAcD,aAEhD,UAAC7B,EAAD,oBAEE,SAACC,GAAD,QACEwB,KAAK,SACDhB,EAAS,QAAS,CACpBiB,SAAU,oBACVK,QAAS,CACPH,MACE,uJACFC,QAAS,uDAKjB,SAAC1B,EAAD,WACS,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQqB,SACP,SAAC7B,EAAD,iBAAeQ,QAAf,IAAeA,GAAf,UAAeA,EAAQqB,aAAvB,aAAe,EAAeH,aAGlC,UAAC7B,EAAD,uBAEE,SAACC,GAAD,QACEwB,KAAK,YACDhB,EAAS,WAAY,CACvBiB,SAAU,wKACVC,UAAW,CACTC,MAAO,EACPC,QAAS,sCAKjB,SAAC1B,EAAD,WACS,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQsB,YACP,SAAC9B,EAAD,iBAAeQ,QAAf,IAAeA,GAAf,UAAeA,EAAQsB,gBAAvB,aAAe,EAAkBJ,aAGrC,SAAC3B,EAAD,CAAQuB,KAAK,SAASS,UAAWtB,EAAjC,0BAQR","sources":["components/Register/Register.styled.jsx","components/Register/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 295px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  appearance: none;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  &:focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #86b7fe;\n    outline: 0;\n    box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: center;\n  text-decoration: none;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  color: #fff;\n  background-color: #212529;\n  border: 1px solid transparent;\n  border-color: #212529;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:active {\n    color: #fff;\n    background-color: #1a1e21;\n    border-color: #191c1f;\n    box-shadow: 0 0 0 0.25rem rgb(66 70 73 / 50%);\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 10px;\n  margin-top: 4px;\n  text-align: center;\n`;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport authOperations from \"redux/auth/auth-operations\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Label, Input, Button, ErrorMessage } from \"./Register.styled\";\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const onSubmit = (data) => {\n    dispatch(authOperations.register(data));\n    reset();\n  };\n\n  return (\n    <motion.div\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ duration: 0.9 }}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            {...register(\"name\", {\n              required: \"Name is required\",\n              minLength: {\n                value: 3,\n                message: \"Please enter correct name (min 3 symbol)\",\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.name && <ErrorMessage>{errors?.name?.message}</ErrorMessage>}\n        </ErrorMessage>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            {...register(\"email\", {\n              required: \"Email is required\",\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"Please enter a valid email example@mail.com\",\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.email && (\n            <ErrorMessage>{errors?.email?.message}</ErrorMessage>\n          )}\n        </ErrorMessage>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"Поле обязательное к заполнению\",\n              minLength: {\n                value: 6,\n                message: \"At least 6 characters long\",\n              },\n            })}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.password && (\n            <ErrorMessage>{errors?.password?.message}</ErrorMessage>\n          )}\n        </ErrorMessage>\n        <Button type=\"submit\" disabled={!isValid}>\n          Submit\n        </Button>\n      </Form>\n    </motion.div>\n  );\n};\n\nexport default Register;\n\n// const handleOnInputChange = (e) => {\n//   switch (e.target.type) {\n//     case \"text\":\n//       return setName(e.target.value);\n//     case \"email\":\n//       return setEmail(e.target.value);\n//     case \"password\":\n//       return setPassword(e.target.value);\n//     default:\n//       return;\n//   }\n// };\n\n// const handleOnSubmit = (e) => {\n//   e.preventDefault();\n//   dispatch(authOperations.register({ name, email, password }));\n//   setName(\"\");\n//   setEmail(\"\");\n//   setPassword(\"\");\n// };\n"],"names":["Form","styled","Label","Input","Button","ErrorMessage","Register","dispatch","useDispatch","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","motion","initial","scale","opacity","animate","transition","duration","onSubmit","data","authOperations","type","required","minLength","value","message","name","pattern","email","password","disabled"],"sourceRoot":""}